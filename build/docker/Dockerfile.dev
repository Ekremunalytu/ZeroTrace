# ZeroTrace Development Container
# All development tools included - one container to rule them all!

FROM ubuntu:22.04

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Istanbul

# =============================================================================
# SYSTEM DEPENDENCIES & BASIC TOOLS
# =============================================================================
RUN apt-get update && apt-get install -y \
    # Basic tools
    curl \
    wget \
    git \
    vim \
    nano \
    htop \
    tree \
    unzip \
    zip \
    jq \
    # Build tools
    build-essential \
    cmake \
    make \
    pkg-config \
    # C++ development
    gcc \
    g++ \
    gdb \
    valgrind \
    # Libraries for C++ projects
    libssl-dev \
    librabbitmq-dev \
    libjsoncpp-dev \
    libpq-dev \
    libpcap-dev \
    # Python development
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    # Node.js & npm (for UI development)
    nodejs \
    npm \
    # Database clients
    postgresql-client \
    redis-tools \
    # Network tools
    net-tools \
    netcat \
    nmap \
    tcpdump \
    wireshark-common \
    # Docker CLI (for container management)
    docker.io \
    # Additional development tools
    strace \
    ltrace \
    lsof \
    && rm -rf /var/lib/apt/lists/*

# =============================================================================
# PYTHON ENVIRONMENT SETUP
# =============================================================================
# Upgrade pip and install common Python packages
RUN python3 -m pip install --upgrade pip setuptools wheel

# Install Python development packages
RUN pip3 install \
    # Web frameworks
    fastapi \
    uvicorn \
    flask \
    # Database
    psycopg2-binary \
    sqlalchemy \
    alembic \
    # Message queue
    pika \
    celery \
    # Security analysis
    yara-python \
    requests \
    # Data analysis
    pandas \
    numpy \
    # Development tools
    pytest \
    black \
    flake8 \
    mypy \
    # Jupyter for analysis
    jupyter \
    ipython

# =============================================================================
# NODE.JS ENVIRONMENT SETUP
# =============================================================================
# Install global npm packages for UI development
RUN npm install -g \
    create-react-app \
    @vue/cli \
    typescript \
    webpack \
    webpack-cli \
    @angular/cli

# =============================================================================
# DEVELOPMENT USER SETUP
# =============================================================================
# Create a non-root user for development
RUN groupadd -g 1000 developer && \
    useradd -u 1000 -g 1000 -m -s /bin/bash developer && \
    usermod -aG sudo developer && \
    echo 'developer ALL=(ALL) NOPASSWD: /usr/bin/apt-get, /usr/bin/systemctl, /usr/bin/docker, /usr/bin/cmake, /usr/bin/make' >> /etc/sudoers

# Add developer to docker group for container management
RUN usermod -aG docker developer

# =============================================================================
# WORKSPACE SETUP
# =============================================================================
WORKDIR /workspace

# Set up development environment
RUN mkdir -p /home/developer/.vscode-server && \
    chown -R developer:developer /home/developer

# Copy development scripts
COPY build/docker/scripts/ /usr/local/bin/
RUN chmod +x /usr/local/bin/*

# =============================================================================
# ENVIRONMENT VARIABLES
# =============================================================================
ENV WORKSPACE=/workspace
ENV PYTHONPATH=/workspace
ENV PATH="/home/developer/.local/bin:$PATH"

# Development environment defaults
ENV POSTGRES_HOST=postgres
ENV POSTGRES_PORT=5432
ENV POSTGRES_DB=zerotrace
ENV POSTGRES_USER=zerotrace
ENV POSTGRES_PASSWORD=zerotrace_dev_pass

ENV RABBITMQ_HOST=rabbitmq
ENV RABBITMQ_PORT=5672
ENV RABBITMQ_USER=zerotrace
ENV RABBITMQ_PASSWORD=zerotrace_dev_pass

ENV REDIS_HOST=redis
ENV REDIS_PORT=6379

# =============================================================================
# DEVELOPMENT TOOLS & ALIASES
# =============================================================================
# Set up useful aliases and development environment
RUN echo 'alias ll="ls -la"' >> /home/developer/.bashrc && \
    echo 'alias la="ls -la"' >> /home/developer/.bashrc && \
    echo 'alias ..="cd .."' >> /home/developer/.bashrc && \
    echo 'alias grep="grep --color=auto"' >> /home/developer/.bashrc && \
    echo 'export PS1="\[\033[01;32m\]\u@zerotrace-dev\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ "' >> /home/developer/.bashrc && \
    echo 'cd /workspace' >> /home/developer/.bashrc

# =============================================================================
# HEALTH CHECK & STARTUP
# =============================================================================
# Health check script
COPY build/docker/healthcheck.sh /usr/local/bin/healthcheck.sh
RUN chmod +x /usr/local/bin/healthcheck.sh

HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Switch to developer user
USER developer

# Set working directory
WORKDIR /workspace

# Default command - keep container running
CMD ["tail", "-f", "/dev/null"]
